public static double distance(double lat1, double lon1, double lat2, double lon2, char unit) {
	      double theta = lon1 - lon2;
	      double dist = Math.sin(deg2rad(lat1)) * Math.sin(deg2rad(lat2)) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.cos(deg2rad(theta));
	      dist = Math.acos(dist);
	      dist = rad2deg(dist);
	      dist = dist * 60 * 1.1515;
	      if (unit == 'K') {
	        dist = dist * 1.609344;
	      } else if (unit == 'N') {
	        dist = dist * 0.8684;
	        }
	      return (dist);
	    }

	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    /*::  This function converts decimal degrees to radians             :*/
	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    private static double deg2rad(double deg) {
	      return (deg * Math.PI / 180.0);
	    }

	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    /*::  This function converts radians to decimal degrees             :*/
	    /*:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::*/
	    private static double rad2deg(double rad) {
	      return (rad * 180.0 / Math.PI);
	    }

	    


//21.0273119,+105.8340303/21.026282,105.833551/@21.0267957,105.8327058,18z/data=!4m6!4m5!1m3!2m2!1d105.8340303!2d21.0273119!1m0
	static public void main(String args[]) {
		System.out.println(distance(21.0273119, 105.8340303, 21.026282, 105.833551, 'M') + " Miles\n");
	    System.out.println(distance(21.0273119, 105.8340303, 21.026282, 105.833551, 'K')*1000 + " Kilometers\n");
	    System.out.println(distance(21.0273119, 105.8340303, 21.026282, 105.833551, 'N') + " Nautical Miles\n");
	}